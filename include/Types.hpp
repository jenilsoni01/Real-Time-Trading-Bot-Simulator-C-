#pragma once

#include <string>
#include <chrono>

namespace trading {

using TimePoint = std::chrono::system_clock::time_point;

// Represents a single market tick with price and volume
struct Tick {
    TimePoint timestamp;
    double price;
    double volume;
};

// Trading action (buy/sell/hold)
enum class Action {
    BUY,
    SELL,
    HOLD
};

// Represents a completed trade
struct Trade {
    TimePoint entryTime;
    TimePoint exitTime;
    double entryPrice;
    double exitPrice;
    double quantity;
    double pnl;
    bool isWin;
};

// Signal generated by strategy
struct Signal {
    TimePoint timestamp;
    Action action;
    std::string reason;
};

// Market position state
struct Position {
    bool isOpen{false};
    double entryPrice{0.0};
    double quantity{0.0};
    TimePoint entryTime;
};

} // namespace trading 